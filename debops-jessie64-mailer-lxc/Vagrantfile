# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV["VAGRANT_DEFAULT_PROVIDER"] = "lxc"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.define "webmail" do |webmail|
    webmail.vm.hostname = "webmail.example.com"
  end
  config.vm.define "mail" do |mail|
    mail.vm.hostname = "mail.example.com"
  end

  # Path to a CA cert bundle to use when downloading a box directly. By
  # default, Vagrant will use the Mozilla CA cert bundle.
  #config.vm.box_download_ca_cert = "/etc/ssl/certs/ca-certificates.crt"

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "debian/jessie64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update
    sudo apt-get -y upgrade
  SHELL

  config.vm.provision "ansible" do |ansible|
    ansible.galaxy_role_file = "requirements.txt"
    ansible.playbook = "vagrant_debops_mailer.yml"
    ansible.extra_vars = {
      vagrant_debops__debops__update_method: 'async'
    }
    ansible.groups = {
      "debops_master" => [ "webmail" ],
      "debops_all_hosts" => [ "webmail", "mail" ],
      "debops_all_hosts:vars" => {
         "console_sysctl_kernel_shm_values" => "{}",
         "dhparam__bits" => "[ '1024' ]",
         "ferm__enabled" => "False",
         "nullmailer__relayhost" => "mail.example.com",
         "users_list" => "[ { 'name': 'user1' }, { 'name': 'user2' } ]"
      },
      "debops_service_dovecot" => [ "mail" ],
      "debops_service_dovecot:vars" => {
         "dovecot_protocols" => "[ 'imap', 'managesieve' ]",
         "dovecot_mail_location" => "maildir:~/Maildir"
      },
      "debops_service_postfix" => [ "mail" ],
      "debops_service_postfix:vars" => {
         "postfix" => "[ 'local', 'network', 'mx', 'submission', 'client', 'auth', 'test' ]",
         "postfix_default_local_alias_recipients" => "[ 'user1' ]",
         "postfix_mydestination" => "[ 'example.com' ]",
         "postfix_mynetworks" => "[ '{{ ansible_default_ipv4.network }}/{{ (\"0.0.0.0/\" + ansible_default_ipv4.netmask) | ipaddr(\"prefix\") }}' ]",
         "postfix_local_maincf" => "home_mailbox = Maildir/"
      },
      "debops_service_roundcube" => [ "webmail" ],
      "debops_service_roundcube:vars" => {
         "roundcube__domain" => "[ 'webmail.example.com' ]",
         "roundcube__default_host" => "tls://mail.example.com",
         "roundcube__smtp_host" => "tls://mail.example.com",
         "roundcube__smtp_port" => "587"
      }
    }
  end

  # This requires the Vagrant hostmanager plugin to be installed.
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
end
